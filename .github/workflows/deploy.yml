name: Deploy to ECS (feature/cicd)

on:
  push:
    branches:
      - feature/cicd

permissions:
  id-token: write   # Para OIDC
  contents: read

jobs:
  deploy:
    name: Build & Deploy to ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Debug GitHub OIDC token
        run: |
          set -e
          echo "Requesting OIDC token from GitHub..."
          RAW=$(curl -sLS "${ACTIONS_ID_TOKEN_REQUEST_URL}&audience=sts.amazonaws.com" \
            -H "Authorization: Bearer ${ACTIONS_ID_TOKEN_REQUEST_TOKEN}")
          TOKEN=$(echo $RAW | jq -r '.value')
          echo "Decoded OIDC token payload:"
          echo $TOKEN | cut -d "." -f2 | base64 -d | jq

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::914194816312:role/GitHubActionsECSDeployRole
          aws-region: us-east-2

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR
        id: build-image
        run: |
          IMAGE_REPO=914194816312.dkr.ecr.us-east-2.amazonaws.com/next-cicd
          IMAGE_TAG=${GITHUB_SHA::7} # 7 caracteres del commit
          docker build -t $IMAGE_REPO:$IMAGE_TAG .
          docker push $IMAGE_REPO:$IMAGE_TAG
          echo "image=$IMAGE_REPO:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Render Amazon ECS task definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: aws/taskdef.json
          container-name: cicd
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition to service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: next-cicd-service-ka2t1yhq
          cluster: next-cicd-cluster
          wait-for-service-stability: true
